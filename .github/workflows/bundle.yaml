name: bundle

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      # checkout
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: JesseTG/rm@v1.0.3
        with:
          path: |
            dist
            wasm/pkg

      # setup rust toolchain for wasm
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      # install wasm-pack
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # install binaryen (provides wasm-opt)
      - name: Install binaryen
        run: |
          sudo apt-get update
          sudo apt-get install -y binaryen

      # install wabt (provides wasm-strip, wasm2wat, etc.)
      - name: Install wabt
        run: |
          sudo apt-get install -y wabt

      # build wasm (release mode for optimization)
      - name: Build WASM
        run: cd wasm && wasm-pack build --target web --release

      # optimize wasm with wasm-opt
      - name: Optimize WASM with wasm-opt
        run: |
          cd wasm && wasm-opt -O3 --enable-bulk-memory --enable-mutable-globals \
            --enable-nontrapping-float-to-int --enable-sign-ext \
            --enable-simd --enable-reference-types \
            pkg/wasm_bg.wasm -o pkg/wasm_bg.wasm

      # strip debug info with wasm-strip
      - name: Strip WASM debug info
        run: cd wasm && wasm-strip pkg/wasm_bg.wasm

      # build frontend
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - run: pnpm i
      - run: pnpm format
      - run: pnpm build
      # tag if [release...] is in the commit message subject
      - id: autotag_check
        shell: bash
        run: |-
          message=$(git log -n 1 --pretty=format:"%s")
          if [[ $message == *"[release]"* || $message == *"[release patch]"* ]]; then
            echo "should_tag=true" >> "$GITHUB_OUTPUT"
            echo "bump=patch" >> "$GITHUB_OUTPUT"
          elif [[ $message == *"[release minor]"* ]]; then
            echo "should_tag=true" >> "$GITHUB_OUTPUT"
            echo "bump=minor" >> "$GITHUB_OUTPUT"
          elif [[ $message == *"[release major]"* ]]; then
            echo "should_tag=true" >> "$GITHUB_OUTPUT"
            echo "bump=major" >> "$GITHUB_OUTPUT"
          else
            echo "should_tag=false" >> "$GITHUB_OUTPUT"
            echo "bump=" >> "$GITHUB_OUTPUT"
          fi
      - if: ${{ github.ref_type != 'tag' && steps.autotag_check.outputs.should_tag == 'true' }}
        id: autotag
        uses: phish108/autotag-action@v1.1.64
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          bump: ${{ steps.autotag_check.outputs.bump }}
          dry-run: true
      - if: ${{ github.ref_type == 'tag' }}
        id: manual_tag
        env:
          VALUE: ${{ github.ref }}
        run: |-
          export TAG=${VALUE##refs/tags/}
          echo result=$TAG >> "$GITHUB_OUTPUT"
      - if: ${{ github.ref_type == 'tag' || steps.autotag_check.outputs.should_tag == 'true' }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: manifest.json
          find: \d+\.\d+\.\d+
          replace: ${{ github.ref_type == 'tag' && steps.manual_tag.outputs.result || steps.autotag.outputs.new-tag }}
          regex: true
      - if: ${{ github.ref_type == 'tag' || steps.autotag_check.outputs.should_tag == 'true' }}
        id: package_version
        run: |-
          echo 'result="version": "${{ github.ref_type == 'tag' && steps.manual_tag.outputs.result || steps.autotag.outputs.new-tag }}"' >> "$GITHUB_OUTPUT"
      - if: ${{ github.ref_type == 'tag' || steps.autotag_check.outputs.should_tag == 'true' }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: package.json
          find: '"version": "\d+\.\d+\.\d+"'
          replace: ${{ steps.package_version.outputs.result }}
          regex: true

      # commit
      - uses: EndBug/add-and-commit@v9.1.3
        with:
          default_author: github_actions
          message: '[bot] Bundle'
      - if: ${{ github.ref_type == 'tag' }}
        shell: bash
        run: |-
          git tag -d ${{ steps.manual_tag.outputs.result }}
          git push --delete origin ${{ steps.manual_tag.outputs.result }}
      - if: ${{ github.ref_type == 'tag' || steps.autotag_check.outputs.should_tag == 'true' }}
        shell: bash
        run: |-
          git tag ${{ github.ref_type == 'tag' && steps.manual_tag.outputs.result || steps.autotag.outputs.new-tag }}
          git push --tags
